-- MySQL Script generated by MySQL Workbench
-- Dom 10 Jun 2018 21:38:35 -03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema new_schema1
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema new_schema1
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `new_schema1` ;
USE `new_schema1` ;

-- -----------------------------------------------------
-- Table `new_schema1`.`UserProfile`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `new_schema1`.`UserProfile` (
  `idUserProfile` INT NOT NULL AUTO_INCREMENT,
  `FirstName` VARCHAR(255) NOT NULL,
  `LastName` VARCHAR(255) NOT NULL,
  `Email` VARCHAR(255) NOT NULL,
  `Password` VARCHAR(255) NOT NULL,
  `ProfilePicture` VARCHAR(255) NULL,
  `NumberOfFriends` INT NOT NULL,
  `Date` DATETIME NOT NULL,
  PRIMARY KEY (`idUserProfile`))
ENGINE = InnoDB
COMMENT = 'This table holds the content related to a user from Facebook.';


-- -----------------------------------------------------
-- Table `new_schema1`.`FriendRequests`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `new_schema1`.`FriendRequests` (
  `idUserProfile_1` INT NOT NULL,
  `idUserProfile_2` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idUserProfile_1`, `idUserProfile_2`))
ENGINE = InnoDB
COMMENT = 'Relationship between two instances of a user.';


-- -----------------------------------------------------
-- Table `new_schema1`.`FriendRequest`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `new_schema1`.`FriendRequest` (
  `idUserProfile_1` INT NOT NULL,
  `idUserProfile_2` INT NOT NULL,
  `Date` DATETIME NOT NULL,
  PRIMARY KEY (`idUserProfile_1`, `idUserProfile_2`),
  INDEX `fk_UserProfile_has_UserProfile_UserProfile1_idx` (`idUserProfile_2` ASC),
  INDEX `fk_UserProfile_has_UserProfile_UserProfile_idx` (`idUserProfile_1` ASC),
  CONSTRAINT `fk_UserProfile_has_UserProfile_UserProfile`
    FOREIGN KEY (`idUserProfile_1`)
    REFERENCES `new_schema1`.`UserProfile` (`idUserProfile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_UserProfile_has_UserProfile_UserProfile1`
    FOREIGN KEY (`idUserProfile_2`)
    REFERENCES `new_schema1`.`UserProfile` (`idUserProfile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `new_schema1`.`BlockingUser`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `new_schema1`.`BlockingUser` (
  `UserProfile_idUserProfile` INT NOT NULL,
  `UserProfile_idUserProfile1` INT NOT NULL,
  PRIMARY KEY (`UserProfile_idUserProfile`, `UserProfile_idUserProfile1`),
  INDEX `fk_UserProfile_has_UserProfile1_UserProfile2_idx` (`UserProfile_idUserProfile1` ASC),
  INDEX `fk_UserProfile_has_UserProfile1_UserProfile1_idx` (`UserProfile_idUserProfile` ASC),
  CONSTRAINT `fk_UserProfile_has_UserProfile1_UserProfile1`
    FOREIGN KEY (`UserProfile_idUserProfile`)
    REFERENCES `new_schema1`.`UserProfile` (`idUserProfile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_UserProfile_has_UserProfile1_UserProfile2`
    FOREIGN KEY (`UserProfile_idUserProfile1`)
    REFERENCES `new_schema1`.`UserProfile` (`idUserProfile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `new_schema1`.`Friendship`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `new_schema1`.`Friendship` (
  `UserProfile_idUserProfile` INT NOT NULL,
  `UserProfile_idUserProfile1` INT NOT NULL,
  `Date` DATETIME NOT NULL,
  PRIMARY KEY (`UserProfile_idUserProfile`, `UserProfile_idUserProfile1`),
  INDEX `fk_UserProfile_has_UserProfile_UserProfile3_idx` (`UserProfile_idUserProfile1` ASC),
  INDEX `fk_UserProfile_has_UserProfile_UserProfile2_idx` (`UserProfile_idUserProfile` ASC),
  CONSTRAINT `fk_UserProfile_has_UserProfile_UserProfile2`
    FOREIGN KEY (`UserProfile_idUserProfile`)
    REFERENCES `new_schema1`.`UserProfile` (`idUserProfile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_UserProfile_has_UserProfile_UserProfile3`
    FOREIGN KEY (`UserProfile_idUserProfile1`)
    REFERENCES `new_schema1`.`UserProfile` (`idUserProfile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `new_schema1`.`Groups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `new_schema1`.`Groups` (
  `idGroups` INT NOT NULL AUTO_INCREMENT,
  `DateCreation` DATETIME NOT NULL,
  `Description` VARCHAR(255) NULL,
  `Name` VARCHAR(255) NOT NULL,
  `NumberOfMembers` INT NOT NULL,
  `BackgroundPicture` VARCHAR(255) NULL,
  PRIMARY KEY (`idGroups`))
ENGINE = InnoDB
COMMENT = 'This entity represents groups from Facebook, communities that holds a number of users, sharing content among themselves.';


-- -----------------------------------------------------
-- Table `new_schema1`.`Participation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `new_schema1`.`Participation` (
  `Groups_idGroups` INT NOT NULL,
  `UserProfile_idUserProfile` INT NOT NULL,
  `IsAdmin` TINYINT NOT NULL,
  `IsCreator` TINYINT NOT NULL,
  PRIMARY KEY (`Groups_idGroups`, `UserProfile_idUserProfile`),
  INDEX `fk_Groups_has_UserProfile_UserProfile2_idx` (`UserProfile_idUserProfile` ASC),
  INDEX `fk_Groups_has_UserProfile_Groups2_idx` (`Groups_idGroups` ASC),
  CONSTRAINT `fk_Groups_has_UserProfile_Groups2`
    FOREIGN KEY (`Groups_idGroups`)
    REFERENCES `new_schema1`.`Groups` (`idGroups`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Groups_has_UserProfile_UserProfile2`
    FOREIGN KEY (`UserProfile_idUserProfile`)
    REFERENCES `new_schema1`.`UserProfile` (`idUserProfile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Relationship represeting a User being part of a given group in fb.';


-- -----------------------------------------------------
-- Table `new_schema1`.`RequestsGroupParticipation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `new_schema1`.`RequestsGroupParticipation` (
  `UserProfile_idUserProfile` INT NOT NULL,
  `Groups_idGroups` INT NOT NULL,
  `DateRequest` DATETIME NOT NULL,
  `Participation_Groups_idGroups` INT NULL,
  `Participation_UserProfile_idUserProfile` INT NULL,
  PRIMARY KEY (`UserProfile_idUserProfile`, `Groups_idGroups`),
  INDEX `fk_RequestsGroupParticipation_Groups1_idx` (`Groups_idGroups` ASC),
  INDEX `fk_RequestsGroupParticipation_Participation1_idx` (`Participation_Groups_idGroups` ASC, `Participation_UserProfile_idUserProfile` ASC),
  CONSTRAINT `fk_RequestsGroupParticipation_UserProfile1`
    FOREIGN KEY (`UserProfile_idUserProfile`)
    REFERENCES `new_schema1`.`UserProfile` (`idUserProfile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_RequestsGroupParticipation_Groups1`
    FOREIGN KEY (`Groups_idGroups`)
    REFERENCES `new_schema1`.`Groups` (`idGroups`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_RequestsGroupParticipation_Participation1`
    FOREIGN KEY (`Participation_Groups_idGroups` , `Participation_UserProfile_idUserProfile`)
    REFERENCES `new_schema1`.`Participation` (`Groups_idGroups` , `UserProfile_idUserProfile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'This entity holds all the requests from users to a given group, being identified by relationships with both User and Group.';


-- -----------------------------------------------------
-- Table `new_schema1`.`Post`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `new_schema1`.`Post` (
  `idPost` INT NOT NULL AUTO_INCREMENT,
  `Text` VARCHAR(255) NULL,
  `PostTime` DATETIME NOT NULL,
  `NumberOfComments` INT NOT NULL,
  `Visibility` TINYINT NOT NULL,
  `UserProfile_idUserProfile_postOwner` INT NOT NULL,
  `GroupsMural_idGroups` INT NULL,
  `UserProfileMural_idUserProfile` INT NULL,
  `NumberOfLikes` INT NOT NULL,
  `Attachment_Path` VARCHAR(255) NULL,
  `Attachment_Type` VARCHAR(255) NULL,
  PRIMARY KEY (`idPost`, `UserProfile_idUserProfile_postOwner`),
  INDEX `fk_Post_UserProfile1_idx` (`UserProfile_idUserProfile_postOwner` ASC),
  INDEX `fk_Post_Groups1_idx` (`GroupsMural_idGroups` ASC),
  INDEX `fk_Post_UserProfile2_idx` (`UserProfileMural_idUserProfile` ASC),
  CONSTRAINT `fk_Post_UserProfile1`
    FOREIGN KEY (`UserProfile_idUserProfile_postOwner`)
    REFERENCES `new_schema1`.`UserProfile` (`idUserProfile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Post_Groups1`
    FOREIGN KEY (`GroupsMural_idGroups`)
    REFERENCES `new_schema1`.`Groups` (`idGroups`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Post_UserProfile2`
    FOREIGN KEY (`UserProfileMural_idUserProfile`)
    REFERENCES `new_schema1`.`UserProfile` (`idUserProfile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `new_schema1`.`Comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `new_schema1`.`Comments` (
  `idComments` INT NOT NULL AUTO_INCREMENT,
  `NumberOfResponses` INT NOT NULL,
  `Post_idPost` INT NOT NULL,
  `Post_UserProfile_idUserProfile_postOwner` INT NOT NULL,
  `UserProfile_idUserProfile_commenter` INT NOT NULL,
  `text` VARCHAR(255) NULL,
  `CommentTime` DATETIME NULL,
  PRIMARY KEY (`idComments`, `Post_idPost`, `Post_UserProfile_idUserProfile_postOwner`, `UserProfile_idUserProfile_commenter`),
  INDEX `fk_Comments_Post1_idx` (`Post_idPost` ASC, `Post_UserProfile_idUserProfile_postOwner` ASC),
  INDEX `fk_Comments_UserProfile1_idx` (`UserProfile_idUserProfile_commenter` ASC),
  CONSTRAINT `fk_Comments_Post1`
    FOREIGN KEY (`Post_idPost` , `Post_UserProfile_idUserProfile_postOwner`)
    REFERENCES `new_schema1`.`Post` (`idPost` , `UserProfile_idUserProfile_postOwner`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Comments_UserProfile1`
    FOREIGN KEY (`UserProfile_idUserProfile_commenter`)
    REFERENCES `new_schema1`.`UserProfile` (`idUserProfile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `new_schema1`.`Responses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `new_schema1`.`Responses` (
  `idResponses` INT NOT NULL AUTO_INCREMENT,
  `ResponseTime` DATETIME NULL,
  `Comments_idComments` INT NOT NULL,
  `Comments_Post_idPost` INT NOT NULL,
  `Comments_Post_UserProfile_idUserProfile_postOwner` INT NOT NULL,
  `Comments_UserProfile_idUserProfile_commenter` INT NOT NULL,
  `UserProfile_idUserProfile_responder` INT NOT NULL,
  `text` VARCHAR(255) NULL,
  PRIMARY KEY (`idResponses`, `Comments_idComments`, `Comments_Post_idPost`, `Comments_Post_UserProfile_idUserProfile_postOwner`, `Comments_UserProfile_idUserProfile_commenter`, `UserProfile_idUserProfile_responder`),
  INDEX `fk_Responses_Comments1_idx` (`Comments_idComments` ASC, `Comments_Post_idPost` ASC, `Comments_Post_UserProfile_idUserProfile_postOwner` ASC, `Comments_UserProfile_idUserProfile_commenter` ASC),
  INDEX `fk_Responses_UserProfile1_idx` (`UserProfile_idUserProfile_responder` ASC),
  CONSTRAINT `fk_Responses_Comments1`
    FOREIGN KEY (`Comments_idComments` , `Comments_Post_idPost` , `Comments_Post_UserProfile_idUserProfile_postOwner` , `Comments_UserProfile_idUserProfile_commenter`)
    REFERENCES `new_schema1`.`Comments` (`idComments` , `Post_idPost` , `Post_UserProfile_idUserProfile_postOwner` , `UserProfile_idUserProfile_commenter`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Responses_UserProfile1`
    FOREIGN KEY (`UserProfile_idUserProfile_responder`)
    REFERENCES `new_schema1`.`UserProfile` (`idUserProfile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `new_schema1`.`Blocked`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `new_schema1`.`Blocked` (
  `Groups_idGroups` INT NOT NULL,
  `UserProfile_idUserProfile` INT NOT NULL,
  PRIMARY KEY (`Groups_idGroups`, `UserProfile_idUserProfile`),
  INDEX `fk_Groups_has_UserProfile_UserProfile3_idx` (`UserProfile_idUserProfile` ASC),
  INDEX `fk_Groups_has_UserProfile_Groups3_idx` (`Groups_idGroups` ASC),
  CONSTRAINT `fk_Groups_has_UserProfile_Groups3`
    FOREIGN KEY (`Groups_idGroups`)
    REFERENCES `new_schema1`.`Groups` (`idGroups`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Groups_has_UserProfile_UserProfile3`
    FOREIGN KEY (`UserProfile_idUserProfile`)
    REFERENCES `new_schema1`.`UserProfile` (`idUserProfile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'This relationship holds the users that are blocked in a given group.';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
